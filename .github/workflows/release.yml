name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip release]')"
    
    permissions:
      contents: write
      pull-requests: write
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma client
      run: npx prisma generate
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Build application
      run: npm run build
      
    - name: Create release
      id: release
      uses: cycjimmy/semantic-release-action@v4
      with:
        semantic_version: 22
        extra_plugins: |
          @semantic-release/changelog@6.0.3
          @semantic-release/git@10.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create release summary
      if: steps.release.outputs.new_release_published == 'true'
      run: |
        echo "## ðŸš€ New Release: v${{ steps.release.outputs.new_release_version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Release Notes" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.release.outputs.new_release_notes }}" >> $GITHUB_STEP_SUMMARY